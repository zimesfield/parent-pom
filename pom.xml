<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.zimesfield</groupId>
	<artifactId>parent</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<name>parent</name>
	<description>zimesfield parent pom</description>

	<packaging>pom</packaging>

	<developers>
		<developer>
			<name>Cyprian Omenuko</name>
			<email>comenuko@zimesfield.com</email>
			<organization>Zimesfield Limited</organization>
			<organizationUrl>https://www.zimesfield.com</organizationUrl>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git://github.com/zimesfield/commons.git</connection>
		<developerConnection>scm:git:ssh://github.com:zimesfield/commons.git</developerConnection>
		<url>http://github.com/zimesfield/commons/tree/main</url>

	</scm>


	<properties>
<!--		<spring-boot.version>2.6.6</spring-boot.version>-->

		<problem-spring-web.version>0.27.0</problem-spring-web.version>
		<commons.lang3>3.12.0</commons.lang3>
		<!-- Zimesfield -->
		<zimesfield-commons.version>2.0.0-SNAPSHOT</zimesfield-commons.version>
		<zimesfield-api-contract.version>2.0.0-SNAPSHOT</zimesfield-api-contract.version>
		<spring-mvc-util.version>2.0.0-SNAPSHOT</spring-mvc-util.version>

		<jhipster-dependencies.version>7.2.0</jhipster-dependencies.version>

		<hibernate.version>5.6.7.Final</hibernate.version>
		<!--		<archunit-junit5.version>0.21.0</archunit-junit5.version>-->
		<mapstruct.version>1.4.2.Final</mapstruct.version>
		<lombok.version>1.18.22</lombok.version>
		<archunit-junit5.version>0.19.0</archunit-junit5.version>
		<build-plugin.jacoco.version>0.8.7</build-plugin.jacoco.version>

<!--&lt;!&ndash;		<hibernate-validator.version>7.0.1.Final</hibernate-validator.version>&ndash;&gt;-->
<!--		<liquibase.version>4.3.5</liquibase.version>-->
<!--		<liquibase-hibernate5.version>4.3.5</liquibase-hibernate5.version>-->

<!--		<javax.validation.version>2.0.1.Final</javax.validation.version>-->
<!--		<validation-api.version>2.0.1.Final</validation-api.version>-->
<!--&lt;!&ndash;		<hibernate.version>5.4.32.Final</hibernate.version>&ndash;&gt;-->

<!--		<javassist.version>3.27.0-GA</javassist.version>-->

<!--		<lombok.version>1.18.22</lombok.version>-->
		<java.version>11</java.version>
<!--		<maven.compiler.source>11</maven.compiler.source>-->
<!--		<maven.compiler.target>11</maven.compiler.target>-->
<!--		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>-->
<!--		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>-->
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>

		<!-- Test coverage analysis -->
		<build-plugin.jacoco.version>0.8.7</build-plugin.jacoco.version>
	</properties>

<!--	<dependencies>-->
<!--		<dependency>-->
<!--			<groupId>org.zalando</groupId>-->
<!--			<artifactId>problem-spring-web</artifactId>-->
<!--&lt;!&ndash;			<version>${problem-spring-web.version}</version>&ndash;&gt;-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-test</artifactId>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->
<!--	</dependencies>-->

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>tech.jhipster</groupId>
				<artifactId>jhipster-dependencies</artifactId>
				<version>${jhipster-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.zimesfield</groupId>
				<artifactId>spring-mvc-util</artifactId>
				<version>0.0.2-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.zimesfield</groupId>
				<artifactId>event</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.zimesfield</groupId>
				<artifactId>commons</artifactId>
				<version>2.0.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>5.8.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>4.0.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.tngtech.archunit</groupId>
				<artifactId>archunit-junit5-api</artifactId>
				<version>${archunit-junit5.version}</version>
				<scope>test</scope>
			</dependency>


			<!-- Adding the engine dependency to the surefire-plugin unfortunately does not work in the current version. -->
			<!-- https://www.archunit.org/userguide/html/000_Index.html#_junit_5 -->
			<dependency>
				<groupId>com.tngtech.archunit</groupId>
				<artifactId>archunit-junit5-engine</artifactId>
				<version>${archunit-junit5.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<optional>true</optional>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
<!--			<plugin>-->
<!--				<groupId>org.springframework.boot</groupId>-->
<!--				<artifactId>spring-boot-maven-plugin</artifactId>-->
<!--			</plugin>-->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.8</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<scmCommentPrefix>[ci skip]</scmCommentPrefix>
					<tagNameFormat>@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<annotationProcessorPaths>
							<path>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-configuration-processor</artifactId>
<!--								<version>${parent.version}</version>-->
							</path>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>1.18.4</version>
							</path>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${mapstruct.version}</version>
							</path>
							<!-- For JPA static metamodel generation -->
							<path>
								<groupId>org.hibernate</groupId>
								<artifactId>hibernate-jpamodelgen</artifactId>
								<version>${hibernate.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

	<profiles>
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${build-plugin.jacoco.version}</version>
						<executions>
							<!-- Prepares the property pointing to the JaCoCo runtime agent
                            which is passed as VM argument when Maven the Surefire plugin is executed. -->
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<!-- Ensures that the code coverage report is created after
                            all tests have been run. -->
							<execution>
								<id>generate-report</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-check</id>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<rules>
										<rule>
											<element>PACKAGE</element>
											<limits>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>0.00</minimum>
												</limit>
											</limits>
										</rule>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>3.3.1</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- Prevent gpg from using pinentry programs -->
							<gpgArguments>
								<arg>--pinentry-mode</arg>
								<arg>loopback</arg>
							</gpgArguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

</project>
